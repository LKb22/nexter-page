@use "base"; // Import base with the namespace

.gallery {
  background-color: base.$color-grey-light-1;
  // Gallery section width is a full-bleed section, from full-start to full-end
  // Columns - Place the gallery from full-start to full-end
  grid-column: full-start / full-end;

  // Gallery will be an 8 x 7 grid to achieve the desired layout, where the smallest image is 1 x 1 grid cell and the other images are any number of additional cells using span
  display: grid;
  grid-template-columns: repeat(8, 1fr);
  grid-template-rows: repeat(7, 5vw); // 5% of the viewport width to maintain aspect ratio and responsiveness (in this case)
  grid-gap: 1.5rem; // Gap between the images
  padding: 1.5rem; // Equal padding around the gallery

  &__item {
  // Size and position the images in the gallery using the grid cells }

    &--1 { grid-area: 1 / 1 / span 2 / span 2; }

    &--2 { grid-area: 1 / 3 / span 3 / span 3; }

    &--3 { grid-area: 1 / 6 / span 2 / span 1; }

    &--4 { grid-area: 1 / 7 / span 2 / -1; }

    &--5 { grid-area: 3 / 1 / span 3 / span 2; }

    &--6 { grid-area: 4 / 3 / span 2 / span 2; }

    &--7 { grid-area: 4 / 5; } // Just one cell - shorthand of grid-area: 4 / 5 / span 1 / span 1;

    &--8 { grid-area: 3 / 6 / span 2 / span 2; }

    &--9 { grid-area: 3 / 8 / span 3 / -1; }

    &--10 { grid-area: 6 / 1 / -1 / span 1; }

    &--11 { grid-area: 6 / 2 / -1 / span 2; }

    &--12 { grid-area: 6 / 4 / -1 / span 1; }

    &--13 { grid-area: 5 / 5 / -1 / span 3; }

    &--14 { grid-area: 6 / 8 / -1 / -1; }
  }

  &__img {
    width: 100%;
    height: 100%; // Cannot use aspect ratio here because width and height are not the same (even though both are 100%)
    // Use object-fit to fit each image into its grid cell while maintaining aspect ratio
    object-fit: cover;
    display: block; // Remove the default inline display of the image
  }
}
